#!/usr/bin/python3
"""This is the "2-matrix_divided" module
the 2-matrix_divided module supplies one function, matrix_divided(), which
divides all elements of a matrix and raises TypeError if the matrix is not
a list of integers/floats or if it contains unequal rows. it also raises the
TypeError if div is not an integer/float or if if it equals zero"""


def matrix_divided(matrix, div):
    """
    the matrix_divided function divides all elements of a matrix
    """

    if div == 0:
        raise TypeError("division by zero")
    elif not isinstance(div, int) and not isinstance(div, float):
        raise TypeError("div must be a number")

    if not matrix:
        raise TypeError("matrix must be a matrix (list of lists) of \
integers/floats")

    new_matrix = []
    for i in range(len(matrix)):
        new_row = []
        for j in range(len(matrix[i])):
            if not isinstance(matrix[i][j], int)\
            and not isinstance(matrix[i][j], float):
                 raise TypeError("matrix must be a matrix (list of lists) of \
integers/floats")
            new_row.append(round(matrix[i][j] / div, 2))

        new_matrix.append(new_row)
    return new_matrix
