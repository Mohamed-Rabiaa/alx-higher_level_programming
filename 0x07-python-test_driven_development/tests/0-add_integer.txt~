# doctest_0-add_integer.txt
======================

Using ``add_integer``
-------------------
This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:
integers:
--------
    >>> add_integer(1, 2)
    3

    >>> add_integer(100, -2)
    98

    >>> add_integer(2)
    100

floats:
------
    >>> add_integer(100.3, -2)
    98

    >>> add_integer(-10, 10.5)
    0

strings:
-------
    >>> add_integer("2", 6)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

none value:
----------
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>>

    >>> add_integer(5, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    >>>

complex values:
--------------
   >>> add_integer(2+3j, 4)
   Traceback (most recent call last):
   ...
   TypeError: a must be an integer
   >>>

   >>> add_integer(4, 2+3j)
   Traceback (most recent call last):
   ...
   TypeError: b must be an integer
   >>>
